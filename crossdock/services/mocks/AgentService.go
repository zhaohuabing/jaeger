// Copyright (c) The Jaeger Authors.
// SPDX-License-Identifier: Apache-2.0
//
// Run 'make generate-mocks' to regenerate.

// Code generated by mockery. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// AgentService is an autogenerated mock type for the AgentService type
type AgentService struct {
	mock.Mock
}

// GetSamplingRate provides a mock function with given fields: service, operation
func (_m *AgentService) GetSamplingRate(service string, operation string) (float64, error) {
	ret := _m.Called(service, operation)

	if len(ret) == 0 {
		panic("no return value specified for GetSamplingRate")
	}

	var r0 float64
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string) (float64, error)); ok {
		return rf(service, operation)
	}
	if rf, ok := ret.Get(0).(func(string, string) float64); ok {
		r0 = rf(service, operation)
	} else {
		r0 = ret.Get(0).(float64)
	}

	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(service, operation)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewAgentService creates a new instance of AgentService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAgentService(t interface {
	mock.TestingT
	Cleanup(func())
}) *AgentService {
	mock := &AgentService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
